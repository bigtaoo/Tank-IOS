name: Build and Upload iOS IPA

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app

      # Install provisioning profile
      - name: Install provisioning profile
        run: |
          echo "${{ secrets.MOBILEPROVISION_BASE64 }}" | base64 --decode > build_profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          UUID=$(/usr/libexec/PlistBuddy -c Print:UUID /dev/stdin <<< $(security cms -D -i build_profile.mobileprovision))
          cp build_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision

      # Install signing certificate
      - name: Install certificate
        run: |
          echo "${{ secrets.P12_BASE64 }}" | base64 --decode > cert.p12
          security create-keychain -p github actions.keychain
          security import cert.p12 -k ~/Library/Keychains/actions.keychain -P "${{ secrets.P12_PASSWORD }}" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/actions.keychain
          security default-keychain -s ~/Library/Keychains/actions.keychain
          security unlock-keychain -p github ~/Library/Keychains/actions.keychain

      # Patch UnityFramework to Automatic signing
      - name: Force UnityFramework signing to Automatic
        run: |
          sed -i '' '/UnityFramework/,/ProvisioningStyle = Manual;/ s/ProvisioningStyle = Manual;/ProvisioningStyle = Automatic;/' Unity-iPhone.xcodeproj/project.pbxproj

      # Archive app
      - name: Archive app
        run: |
          xcodebuild \
            -project Unity-iPhone.xcodeproj \
            -scheme Unity-iPhone \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/TankIOS.xcarchive archive \
            DEVELOPMENT_TEAM=C677KJH544 \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            CODE_SIGN_STYLE=Manual \
            PROVISIONING_PROFILE_SPECIFIER="tank" \
            -allowProvisioningUpdates

      # Export IPA
      - name: Export IPA
        run: |
          xcodebuild \
            -exportArchive \
            -archivePath $PWD/build/TankIOS.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $PWD/build/output \
            -allowProvisioningUpdates

      # Upload IPA to App Store Connect
      - name: Upload IPA to App Store Connect
        run: |
          xcrun altool --upload-app \
            -f build/output/*.ipa \
            -t ios \
            -u "${{ secrets.APPLE_ID }}" \
            -p "${{ secrets.APPLE_PASSWORD }}"

      # Save IPA as GitHub artifact
      - name: Upload IPA as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Tank-iOS-IPA
          path: build/output/*.ipa
